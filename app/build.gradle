apply from: "$project.rootDir/config/dependencies.gradle"
apply from: "$project.rootDir/config/config.gradle"

apply plugin: ext.plugins.application
apply plugin: ext.plugins.kotlin
apply plugin: ext.plugins.kapt
apply plugin: ext.plugins.kotlinAndroidExtentions
apply plugin: ext.plugins.realm
apply plugin: ext.plugins.firebasePerformance
apply plugin: ext.plugins.fabric


android {

	compileSdkVersion build_params.compile_version

	defaultConfig {
		applicationId "org.amoustakos.boilerplate"
		minSdkVersion build_params.min_version
		targetSdkVersion build_params.target_version
		versionCode 2001
		versionName "0.2.1"

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}

	signingConfigs {
		debug signing_configs.debug
		release signing_configs.release
	}

	buildTypes {
		debug {
			debuggable true
			signingConfig signingConfigs.debug
		}
		release {
			debuggable false
			useProguard true
			minifyEnabled true
			shrinkResources false

			signingConfig signingConfigs.release
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	dexOptions {
		preDexLibraries true
		dexInProcess true
	}

	compileOptions {
		sourceCompatibility java_version
		targetCompatibility java_version
	}

	lintOptions {
		abortOnError false

		/*
		 * Disables deep linking warnings.
		 * If your app is indexable remove this and add deep links
		 * to the activities you want to be crawlable
		 */
		disable 'GoogleAppIndexingWarning'

		/*
		 * lint checks for java/kotlin interoperability
		 */
		check 'Interoperability'
	}

	tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
		kotlinOptions {
			jvmTarget = java_version
			apiVersion = '1.3'
			languageVersion = '1.3'
		}
	}

}

kapt {
	useBuildCache true
}

tasks.withType(JavaCompile) {
	options.compilerArgs += [
			"-Adagger.gradle.incremental",
			"-Adagger.formatGeneratedSource=disabled"
	]
}

dependencies {
	implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

	//Inner modules
	implementation project(':utils_android')
	implementation project(':utils_device')
	implementation project(':utils_image')
	implementation project(':utils_io')
	implementation project(':utils_network')
	implementation project(':utils_analytics')

	kapt annotation_processors.values()

	implementation libs_support.values()
	implementation libs_play_services.values()
	implementation libs_firebase.values()
	implementation libs_logging.values()
	implementation libs_injection.values()

	implementation libs_kotlin.values()
	implementation libs_rx.values()

	implementation libs_local_io.values()

	implementation libs_mapping.values()
	implementation libs_remote_io.values()


	//Tests
	kaptAndroidTest("com.android.support.test.espresso:espresso-core:${lib_versions.espresso}", {
		exclude group: 'com.android.support', module: 'support-annotations'
		exclude group: 'com.google.code.findbugs'
	})
	testImplementation "junit:junit:${lib_versions.junit}"
}

apply plugin: 'com.google.gms.google-services'
